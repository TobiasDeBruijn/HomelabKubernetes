apiVersion: apps/v1
kind: Deployment
metadata:
  name: reporterr
  namespace: mrfriendly
  labels:
    app.kubernetes.io/name: reporterr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporterr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reporterr
    spec:
      automountServiceAccountToken: false
      containers:
      - name: reporterr
        imagePullPolicy: Always
        image: docker-registry.k8s.array21.dev/mrfriendly-reporterr:latest
        securityContext:
          capabilities:
            drop:
            - CAP_NET_RAW
        env:
        - name: AUTHLANDER_HOST
          value: "https://authlander.intern.mrfriendly.nl"
        - name: PG_HOST
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: pg-host
        - name: PG_DATABASE
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: pg-database
        - name: PG_USERNAME
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: pg-username
        - name: PG_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: reporterr
              key: pg-password
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: mysql-host
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: mysql-database
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: mysql-username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: reporterr
              key: mysql-password
        ports:
        - containerPort: 8080
      - name: reporterr-ui
        imagePullPolicy: Always
        image: docker-registry.k8s.array21.dev/mrfriendly-reporterr-ui:latest
        securityContext:
          readOnlyRootFilesystem: true
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: reporterr
  namespace: mrfriendly
spec:
  selector:
    app.kubernetes.io/name: reporterr
  ports:
  - name: api
    protocol: TCP
    port: 8080
    targetPort: 8080
  - name: ui
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reporterr-api
  namespace: mrfriendly
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-mrfriendly"
spec:
  tls:
  - hosts:
    - reporterr-api.intern.mrfriendly.nl
    secretName: reporterr-api-intern-mrfriendly-nl
  rules:
  - host: reporterr-api.intern.mrfriendly.nl
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reporterr
            port:
              number: 8080
--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reporterr-ui
  namespace: mrfriendly
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-mrfriendly"
spec:
  tls:
  - hosts:
    - reporterr.intern.mrfriendly.nl
    secretName: reporterr-intern-mrfriendly-nl
  rules:
  - host: reporterr.intern.mrfriendly.nl
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reporterr
            port:
              number: 80
