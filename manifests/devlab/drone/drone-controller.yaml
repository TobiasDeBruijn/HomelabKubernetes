apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-controller
  namespace: drone
  labels:
    app.kubernetes.io/name: drone-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone-controller
    spec:
      serviceAccountName: drone
      containers:
      - name: drone-controller
        image: drone/drone:2.4.0
#        securityContext:
#          readOnlyRootFilesystem: true
        env:
        - name: "DRONE_GITHUB_CLIENT_ID"
          valueFrom:
            secretKeyRef:
              name: drone
              key: github-client-id
        - name: "DRONE_GITHUB_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              name: drone
              key: github-client-secret
        - name: "DRONE_RPC_SECRET"
          valueFrom:
            secretKeyRef:
              name: drone
              key: rpc-secret
        - name: "DRONE_SERVER_HOST"
          value: "drone.k8s.array21.dev"
        - name: "DRONE_SERVER_PROTO"
          value: "https"
        - name: "DRONE_TLS_CERT"
          value: "/etc/certs/drone.k8s.array21.dev/tls.crt"
        - name: "DRONE_TLS_KEY"
          value: "/etc/certs/drone.k8s.array21.dev/tls.key"
        - name: "DRONE_USER_CREATE"
          value: "username:tobias,admin:true"
        - name: "DRONE_SERVICE_ACCOUNT_DEFAULT"
          value: "drone"
        - name: "DRONE_DATABASE_DRIVER"
          value: "mysql"
        - name: "DRONE_DATABASE_DATASOURCE"
          valueFrom:
            secretKeyRef:
              name: drone
              key: datatabse
        ports:
        - containerPort: 443
        volumeMounts:
        - name: ssl-keys
          mountPath: /etc/certs/drone.k8s.array21.dev/
          readOnly: true
      volumes:
      - name: ssl-keys
        secret:
          secretName: drone-k8s-array21-dev
---

apiVersion: v1
kind: Service
metadata:
  namespace: drone
  name: drone-controller
spec:
  selector:
    app.kubernetes.io/name: drone-controller
  ports:
  - protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drone-controller
  namespace: drone
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: 150m
#    nginx.ingress.kubernetes.io/whitelist-source-range: 85.144.63.138,192.168.1.0/24
spec:
  tls:
  - hosts:
    - drone.k8s.array21.dev
    secretName: drone-k8s-array21-dev
  rules:
  - host: drone.k8s.array21.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: drone-controller
            port:
              number: 443
