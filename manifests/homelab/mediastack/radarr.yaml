apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-data
  namespace: homelab
spec:
  capacity:
    storage: 1000Mi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: longhorn-static
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: '3'
      staleReplicaTimeout: '2880'
    volumeHandle: radarr
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-data
  namespace: homelab
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1000Mi
  volumeName: radarr-data
  storageClassName: longhorn-static
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: homelab
  name: radarr-transmission
spec:
  capacity:
    storage: 2000G
  accessModes:
  - ReadWriteMany
  nfs:
    path: /storage-pool/transmission
    server: storage-hdd.intern.array21.dev
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
  - nfsvers=3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-transmission
  namespace: homelab
spec:
  storageClassName: ""
  volumeName: radarr-transmission
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2000G
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-movies
  namespace: homelab
spec:
  capacity:
    storage: 10000G
  accessModes:
  - ReadWriteMany
  nfs:
    path: /storage-pool/media/movies
    server: storage-hdd.intern.array21.dev
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
  - nfsvers=3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-movies
  namespace: homelab
spec:
  volumeName: radarr-movies
  storageClassName: ""
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10000G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: homelab
  labels:
    app.kubernetes.io/name: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
    spec:
      automountServiceAccountToken: false
      containers:
      - name: radarr
        image: linuxserver/radarr:3.2.2.5080-ls118
        securityContext:
          capabilities:
            drop:
            - CAP_NET_RAW
        ports:
        - containerPort: 7878
        volumeMounts:
        - name: data
          mountPath: /config
        - name: transmission
          mountPath: /data/completed
        - name: movies
          mountPath: /movies
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: radarr-data
      - name: transmission
        persistentVolumeClaim:
          claimName: radarr-transmission
      - name: movies
        persistentVolumeClaim: 
          claimName: radarr-movies
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: homelab
spec:
  selector:
    app.kubernetes.io/name: radarr
  ports:
  - protocol: TCP
    port: 7878
    targetPort: 7878
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr
  namespace: homelab
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.10.0.0/16
    nginx.ingress.kubernetes.io/proxy-body-size: 150m
    cert-manager.io/cluster-issuer: letsencrypt-array21
spec:
  tls:
  - hosts:
    - radarr.k8s.array21.dev
    secretName: radarr-k8s-array21-dev
  rules:
  - host: radarr.k8s.array21.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878
