apiVersion: apps/v1
kind: Deployment
metadata:
  name: skinfixer-api
  labels:
    app: skinfixer-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: skinfixer-api
  template:
    metadata:
      labels:
        app: skinfixer-api
    spec:
      containers:
      - name: skinfixer-api
        imagePullPolicy: Always
        image: docker-registry.k8s.array21.dev/skinfixer-api:latest
        ports:
        - containerPort: 8080
          name: api
        env:
        - name: RUST_BACKTRACE
          value: "1"
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: skinfixer-api
              key: API_KEY
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: skinfixer-api
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: skinfixer-api
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: skinfixer-api
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: skinfixer-api
              key: DB_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: skinfixer-api
spec:
  selector:
    app: skinfixer-api
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: skinfixer-api
  annotations:
#    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - skinfixer.k8s.array21.dev
    secretName: array21-tls
  rules:
  - host: skinfixer.k8s.array21.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: skinfixer-api
            port:
              number: 8080
