apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-manager-frontend-staging
  namespace: twinsight
  labels:
    app.kubernetes.io/name: content-manager-frontend-staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: content-manager-frontend-staging
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: content-manager-frontend-staging
    spec:
      automountServiceAccountToken: false
      containers:
      - name: content-manager-frontend-staging
        securityContext:
          capabilities:
            drop:
            - CAP_NET_RAW
        imagePullPolicy: Always
        image: docker-registry.k8s.array21.dev/twinsight-content-manager-frontend:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: content-manager-frontend-staging
  namespace: twinsight
spec:
  selector:
    app.kubernetes.io/name: content-manager-frontend-staging
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: content-manager-frontend-staging
  namespace: twinsight
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-twinsight-media"
spec:
  tls:
  - hosts:
    - content-manager.staging.twinsight.media
    secretName: content-manager-staging-twinsight-media
  rules:
  - host: content-manager.staging.twinsight.media
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: content-manager-frontend-staging
            port:
              number: 80
